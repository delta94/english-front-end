type Query {
  user(id: String!): User!
  users: [User!]!
}

type User {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  profileMediaUrl: String
  email: String!
  displayEmail: String
  firstName: String!
  lastName: String

  """First + Last name"""
  name: String!
  phone: String
  company: String
  title: String
  bio: String
  socialLinks: SocialLink
  password: String
  state: UserState!
  isVerified: Boolean
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type SocialLink {
  facebook: String
  twitter: String
  linkedin: String
}

enum UserState {
  New
  HasCreated
  HasPublished
}

type Mutation {
  createUser(data: UserInput!): User!
}

input UserInput {
  firstName: String!
  lastName: String!
  email: String!
  state: UserState!
}
